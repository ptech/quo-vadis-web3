---
import board from '../content/board.json'

const numberOfImgs = 51
const boardLength = board.length
const numbers = Array.from({ length: numberOfImgs }, (_, index) => index + 1)
const shuffleArray = () => {
	for (let i = numberOfImgs - 1; i > 0; i--) {
		const j = Math.floor(Math.random() * (i + 1))
		;[numbers[i], numbers[j]] = [numbers[j], numbers[i]]
	}

	if (boardLength > numberOfImgs) {
		const extraArray = []

		for (let i = 0; i < boardLength - numberOfImgs; i++) {
			const randomIdx = Math.floor(Math.random() * boardLength + 1)
			extraArray[i] = randomIdx
		}

		numbers.push(...extraArray)
	}
}

shuffleArray()
---

<div class="py-44">
	<div class="ellipse"></div>
    <div class="ellipse ellipse-2"></div>
    <div class="ellipse ellipse-3"></div>

	<div class="mx-auto grid max-w-7xl px-6 lg:px-20">
		<h2
			class="mb-9 animate--on-visibility text-3xl font-bold tracking-tight text-white sm:text-4xl"
			data-animationclass="animate__slideInRight"
		>
			Editorial Board
		</h2>
		<ul role="list" class="flex flex-wrap justify-center gap-4">
			{
				board.map((person, idx) => (
					<li class={`board-item text-white${person.linkedin ? ' link-scale' : ''}`}>
						<a href={person.linkedin} target="_blank">
							<div
								class="animate--on-visibility card flex h-full flex-col items-center justify-center py-4"
								data-animationclass="animate__zoomIn"
							>
								<img
                                        class="h-20 object-contain mb-4"
									src=`${import.meta.env.BASE_URL}avatars/${numbers[idx]}.svg`
								/>
								<h3 class="text-base tracking-tight">{person.name}</h3>
								<p class="text-xs opacity-50">{person.company}</p>
							</div>
						</a>
					</li>
				))
			}
		</ul>
	</div>
</div>

<style>
	.ellipse {
		position: absolute;
		width: 50%;
		height: 50%;
        width: 410px;
        height: 428px;
		flex-shrink: 0;
        border-radius: 428px;
        background: rgba(206, 77, 164, 0.4);
		filter: blur(100px);
		left: 99px;
		top: 80px;
		z-index: -1;

        &.ellipse-2 {
            top: 200px;
            left: auto;
            right: 99px;
            background: rgba(115, 83, 229, 0.3);
        }

        &.ellipse-3 {
            top: 1000px;
            left: auto;
            right: 125px;
            background: rgba(115, 83, 229, 0.4);
        }
	}

	h3 {
		font-family: inherit;
	}

	.board-item {
		--gap: 16px;
		--n: 2;
		width: calc((100% / var(--n)) - (((var(--n) - 1) / var(--n)) * var(--gap)));

		@media (min-width: 640px) {
			--n: 3;
		}

		@media (min-width: 1024px) {
			--n: 4;
		}
	}

	.link-scale {
		transition: all 0.3s ease-in-out;
		transform-style: preserve-3d;

		&:hover {
			transform: scale(1.1);
		}
	}

	.card {
		border-radius: 20px;
		background: #1d1a27;

        @media (min-width: 640px) {
            aspect-ratio : 1 / 1;
        }
	}
</style>
