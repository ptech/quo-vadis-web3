---
import board from '../content/board.json'

const shuffleArray = <T,>(array: T[]) => {
	return array
		.map((value) => ({ value, sort: Math.random() }))
		.sort((a, b) => a.sort - b.sort)
		.map(({ value }) => value)
}

const totalAvatars = 18
const numbers = Array.from({ length: totalAvatars }, (_, index) => index + 1)

const shuffledNumbers = shuffleArray(numbers)
const shuffledBoard = shuffleArray(board).map((value, index) => ({
	...value,
	avatar:
		import.meta.env.BASE_URL +
		`media/lottie-files/avatars/${shuffledNumbers[index % totalAvatars]}.lottie`,
}))
---

<div class="relative overflow-y-hidden px-6 py-44 lg:px-20">
	<div class="ellipse"></div>
	<div class="ellipse ellipse-2"></div>
	<div class="ellipse ellipse-3"></div>

	<div class="mx-auto grid max-w-7xl">
		<h2 class="mb-9 text-3xl font-bold tracking-tight text-white sm:text-4xl">
			Editorial Board
		</h2>
		<ul role="list" class="flex flex-wrap justify-center gap-x-4 gap-y-9">
			{
				shuffledBoard.map((person) => (
					<li class={`board-item text-white${person.linkedin ? ' link-scale' : ''}`}>
						<a href={person.linkedin} target="_blank">
							<div
								class="animate--on-visibility h-full"
								data-animationclass="animate__zoomIn"
							>
								<div class="card flex h-full flex-col items-center justify-center pb-4 text-center">
									<dotlottie-player
										class="lottie h-28"
										autoplay
										loop
										playMode="bounce"
										src={person.avatar}
									/>
									<h3 class="text-base tracking-tight">{person.name}</h3>
									<p class="text-xs opacity-50">{person.company}</p>
								</div>
							</div>
						</a>
					</li>
				))
			}
		</ul>
	</div>
</div>

<style>
	.ellipse {
		position: absolute;
		width: 50%;
		height: 50%;
		width: 410px;
		height: 428px;
		flex-shrink: 0;
		border-radius: 428px;
		background: rgba(206, 77, 164, 0.4);
		filter: blur(100px);
		left: 99px;
		top: 80px;
		z-index: -1;

		&.ellipse-2 {
			top: 200px;
			left: auto;
			right: 99px;
			background: rgba(115, 83, 229, 0.3);
		}

		&.ellipse-3 {
			top: 1000px;
			left: auto;
			right: 125px;
			background: rgba(115, 83, 229, 0.4);
		}
	}

	.board-item {
		--gap: 16px;
		--n: 1;
		width: calc((100% / var(--n)) - (((var(--n) - 1) / var(--n)) * var(--gap)));

		@media (min-width: 400px) {
			--n: 2;
		}

		@media (min-width: 600px) {
			--n: 3;
		}

		@media (min-width: 856px) {
			--n: 4;
		}

		@media (min-width: 1080px) {
			--n: 5;
		}

		@media (min-width: 1440px) {
			--n: 6;
		}
	}

	.link-scale {
		transition: all 0.3s ease-in-out;
		transform-style: preserve-3d;

		&:hover {
			transform: scale(0.9);
		}
	}

	.card {
		border-radius: 20px;
		background: #ffffff10;
	}

	.lottie {
		scale: 1.4;
	}
</style>
